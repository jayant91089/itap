<?xml version="1.0" encoding="UTF-8"?>

<!-- This is an automatically generated file. -->
<Chapter Label="Chapter_Introduction">
<Heading>Introduction</Heading>

ITAP stands for Information Theoretic Achievability Prover. So basically, it
is intended for coming up with achievability proofs using a computer.
As of now, it supports the following:
<List>
<Item>
Achievability proofs of multi-source network coding using
vector-linear codes: answer questions like 'Is this rate
vector achievable using a vector linear code over the given finite field?'.
If the answer is `yes` it also returns the vector linear code it found as
a certificate of achievability. Otherwise, it just says 'no'.
</Item>
<Item>
Achievability proofs with multi-linear secret sharing schemes: answer questions
'Is there a multi-linear secret sharing scheme over <Math>GF(q)</Math> for this access structure?'
</Item>
<Item>
Representability test for integer polymatroids over a given finite
field: answer questions like `Is the integer polymatroid associated with this
rank vector linear over <Math>GF(q)</Math>?
</Item>
</List>
All three questions above are very similar, in that, we are looking for a
linear representation of an integer polymatroid satisfying certain properties
(satisfying network coding constraints, access structure and having a specified rank vecor resp.)
In the most general form an achievability prover should be able to tell
if there exists a joint distribution satisfying certain constraints on
entropy function which remains a fundamental open problem. ITAP tries
answering this in a more restricted sense, i.e. with vector linear codes.
The algorithm underlying <Math>\texttt{itap}</Math> is called Leiterspiel or the algorithm
of snakes and ladders. See <Cite Key="betten2006error"/> for details.
</Chapter>

